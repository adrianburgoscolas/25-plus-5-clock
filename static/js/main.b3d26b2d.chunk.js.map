{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","breakLength","setBreak","sessionLength","setSession","useEffect","className","id","onClick","state","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAsDeA,MAlDf,WAAgB,IAAD,EACkBC,mBAAS,GAD3B,mBACNC,EADM,KACMC,EADN,OAEsBF,mBAAS,IAF/B,mBAENG,EAFM,KAEQC,EAFR,KASb,OAJAC,qBAAU,eAKR,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,eAIlB,qBAAKC,GAAG,cAAR,0BACA,qBAAKA,GAAG,eAAR,SAAwBN,IACxB,wBAAQM,GAAG,kBAAkBC,QAAS,kBAAIN,GAAS,SAACO,GAClD,OAAGA,EAAM,EACAA,EAAM,EAENA,MAJX,eAOA,wBAAQF,GAAG,kBAAkBC,QAAS,kBAAIN,GAAS,SAACO,GAAD,OAASA,EAAM,MAAlE,eAGA,qBAAKF,GAAG,gBAAR,4BACA,qBAAKA,GAAG,iBAAR,SAA0BJ,IAC1B,wBAAQI,GAAG,oBAAoBC,QAAS,kBAAIJ,GAAW,SAACK,GACtD,OAAGA,EAAM,EACAA,EAAM,EAENA,MAJX,eAOA,wBAAQF,GAAG,oBAAoBC,QAAS,kBAAIJ,GAAW,SAACK,GAAD,OAASA,EAAM,MAAtE,eAGA,qBAAKF,GAAG,cAAR,qBACA,qBAAKA,GAAG,YAAR,eACA,wBAAQA,GAAG,aAAX,wBACA,wBAAQA,GAAG,QAAX,mBACA,+BCnCSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b3d26b2d.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [breakLength,setBreak] = useState(5);\n  const [sessionLength,setSession] = useState(25);\n  // const [min,setMin] = useState(0);\n\n  useEffect(()=>{\n    \n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n      </header>\n      \n      <div id=\"break-label\">Break Length</div>\n      <div id=\"break-length\">{breakLength}</div>\n      <button id=\"break-decrement\" onClick={()=>setBreak((state)=>{\n        if(state>1){\n          return state-1;\n        }else{\n          return state;\n        }\n      })}>-</button>\n      <button id=\"break-increment\" onClick={()=>setBreak((state)=>state+1)}>+</button>\n      \n\n      <div id=\"session-label\">Session Length</div>\n      <div id=\"session-length\">{sessionLength}</div>\n      <button id=\"session-decrement\" onClick={()=>setSession((state)=>{\n        if(state>1){\n          return state-1;\n        }else{\n          return state\n        }\n      })}>-</button>\n      <button id=\"session-increment\" onClick={()=>setSession((state)=>state+1)}>+</button>\n      \n\n      <div id=\"timer-label\">Session</div>\n      <div id=\"time-left\">{}:{}</div>\n      <button id=\"start_stop\">start/stop</button>\n      <button id=\"reset\">reset</button>\n      <footer>\n\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}