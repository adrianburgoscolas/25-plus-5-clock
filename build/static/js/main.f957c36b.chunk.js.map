{"version":3,"sources":["Functions/timerformat.js","App.js","reportWebVitals.js","index.js"],"names":["timerFormat","timer","min","Math","floor","sec","minStr","toString","secStr","FACTOR","App","useState","breakLength","setBreak","sessionLength","setSession","sessionStart","setSessionStart","session","break","setTimer","sessionSelector","setSelector","audio","document","getElementById","useEffect","timeOut","setTimeout","currentTime","play","state","clearTimeout","className","id","onClick","pause","src","rel","href","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f957c36b.chunk.js","sourcesContent":["//format timer from seconds to mm:ss\nconst timerFormat = (timer)=>{\n    let min = Math.floor(timer/60);\n    let sec = timer%60;\n    let minStr = min.toString();\n    let secStr = sec.toString();\n    if(min<10){\n        minStr = '0'+minStr;\n    }\n    if(sec<10){\n        secStr = '0'+secStr;\n    }\n    return minStr+':'+secStr;\n};\n\nexport default timerFormat;","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport timerFormat from './Functions/timerformat';\n\nconst FACTOR = 60;//count on minutes(FACTOR = 60), count on seconds for debbuging(FACTOR = 1)\n\nfunction App() {\n  const [breakLength,setBreak] = useState(5);\n  const [sessionLength,setSession] = useState(25);\n  const [sessionStart,setSessionStart] = useState(false);\n  const [timer,setTimer] = useState({session:25*FACTOR,break:5*FACTOR});\n  const [sessionSelector,setSelector] = useState(true);\n\n  const audio = document.getElementById('beep'); \n\n  useEffect(()=>{\n    let timeOut = setTimeout(()=>{\n      \n      if(sessionStart){\n        if(sessionSelector){\n          if(timer.session > 0){\n            if(timer.session===1){\n              audio.currentTime = 0;\n              audio.play();\n            }\n            setTimer((state)=>{ return {...state,session:state.session-1}});\n          }else{\n            audio.currentTime = 0;\n            audio.play();\n            setSelector((state)=>!state);\n            setTimer((state)=>{ return {...state,session:sessionLength*FACTOR}});\n          }\n        }else{\n          if(timer.break > 0){\n            if(timer.break===1){\n              audio.currentTime = 0;\n              audio.play();\n            }\n            setTimer((state)=>{ return {...state,break:state.break-1}})\n          }else{\n            setSelector((state)=>!state)\n            setTimer((state)=>{ return {...state,break:breakLength*FACTOR}})\n          }\n        }\n      }\n      \n    },1000);\n    return ()=>clearTimeout(timeOut);\n  });\n  return (\n    <div className=\"App\">\n      <div id='container'>\n        <header className=\"App-header\">\n          <h1>25 + 5 Clock</h1>\n        </header>\n        \n        {/*DISPLAY */}\n        <div id=\"timer-label\">{sessionSelector?'Session':'Break'}</div>\n        <div id=\"time-left\">{sessionSelector?timerFormat(timer.session):timerFormat(timer.break)}</div>\n        \n        <div id='session-break-box'>\n          \n          {/* Session block */}\n          <div id='session-box'>\n            <div id=\"session-label\">Session Length</div>\n            <div id=\"session-length\">{sessionLength}</div>\n            <button id=\"session-decrement\" onClick={()=>{\n              if(!sessionStart){\n                setSession((state)=>{\n                  if(state>1){\n                    setTimer((timer)=>{ return {...timer,session:(state*FACTOR)-FACTOR}})\n                    return state-1;\n                  }else{\n                    return state;\n                  }\n                })\n              }\n            }}>-</button>\n            <button id=\"session-increment\" onClick={()=>{\n              if(!sessionStart){\n                setSession((state)=>{\n                  if(state<60){\n                    setTimer((timer)=>{ return {...timer,session:(state*FACTOR)+FACTOR}})\n                    return state+1;\n                  }else{\n                    return state;\n                  }\n                })\n              }\n            }}>+</button>\n            {/* START/STOP */}\n        <button id=\"start_stop\" onClick={()=>{\n          setSessionStart((state)=>!state);\n        }}>{sessionStart?'Pause':'Start'}</button>\n          </div>\n\n            {/* Break block */}\n          <div id='break-box'>\n            <div id=\"break-label\">Break Length</div>\n            <div id=\"break-length\">{breakLength}</div>\n            <button id=\"break-decrement\" onClick={()=>{\n              if(!sessionStart){\n                setBreak((state)=>{\n                  if((state)>1){\n                    setTimer((timer)=>{ return {...timer,break:(state*FACTOR)-FACTOR}})\n                    return state-1;\n                  }else{\n                    return state;\n                  }\n                })\n              }\n            }}>-</button>\n            <button id=\"break-increment\" onClick={()=>{\n              if(!sessionStart){\n                setBreak((state)=>{\n                  if((state)<60){\n                    setTimer((timer)=>{ return {...timer,break:(state*FACTOR)+FACTOR}})\n                    return state+1;\n                  }else{\n                    return state;\n                  }\n                })\n              }\n            }}>+</button>\n                {/* RESET */}\n            <button id=\"reset\" onClick={()=>{\n              audio.pause();\n              audio.currentTime = 0;\n              setBreak(5);\n              setSession(25);\n              setSessionStart(false);\n              setTimer({session:25*FACTOR,break:5*FACTOR})\n              setSelector(true);\n            }}>Reset</button>\n          </div>\n          \n        </div>\n\n        \n\n        \n        <audio id=\"beep\" src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\">\n          Your browser does not support the audio element.\n        </audio>\n        \n      </div>\n      <footer>\n          <a rel='noreferrer' href='https://www.freecodecamp.org/fcce3ec214d-b0f9-4ddc-b526-34aea3d1e4a3' target='_blank'>by Adrian Burgos</a>\n        </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}